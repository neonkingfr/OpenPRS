;;;
;;; File: /opt/oprs/oprs-1.5/src/data/semaphore.opf
;;; $Id$
;;; Date: Fri Nov 14 16:34:06 1997
;;; Host: alf
;;; OP Editor Version: 1.4.4 Released
;;; Compiled on avicenne (Mon Mar 24 16:04:47 MET 1997)
;;; OP File Format: 2
;;;
(2 
(
)
(|Semaphore Create| (
(INVOCATION INVOCATION (! (SEM-CREATE $SEM $NUM $TYPE)) 10 50 1 40 0 )
(CONTEXT CONTEXT  16 110 0 60 0 )
(SETTING SETTING  10 250 0 60 0 )
(EFFECTS EFFECTS  10 350 0 60 0 )
(DOCUMENTATION DOCUMENTATION "Create a semaphore called $SME 
 and intialize it with $NUM." 19 643 1 60 0 )
(PROPERTIES PROPERTIES  10 400 0 60 0 )
) (
(PROCESS N1 0 0 389 183)
(START START 0 0 374 12)
(PROCESS N2 0 0 389 240)
(IF N0 0 0 386 96)
(THEN N0_T 0 0 372 96)
(ELSE N0_F 0 0 407 96)
(END END2 0 0 506 192)
(IF N3 0 0 389 347)
(THEN N3_T 0 0 375 347)
(ELSE N3_F 0 0 410 347)
(PROCESS N4 0 0 121 426)
(PROCESS N5 0 0 389 504)
(IF N7 0 0 121 500)
(THEN N7_T 0 0 107 500)
(ELSE N7_F 0 0 142 500)
(END END1 0 0 97 598)
(IF N8 0 0 139 130)
(THEN N8_T 0 0 125 130)
(ELSE N8_F 0 0 160 130)
(END END3 0 0 36 248)
(PROCESS N9 0 0 389 299)
) (
(GOAL N7_T NN END1
(=> (SEMAPHORE-PASSED $SEM 0))
()  0 -7 40 0)
(GOAL N2 NN N9
(=> (SEMAPHORE-WAIT $SEM 0))
()  0 0 40 0)
(IF N9 NN N3
(? (EQUAL $TYPE SEM-FIFO))
()  -1 -5 40 0)
(IF N0_T NN N8
(? (SEMAPHORE $SEM $NUM))
((149 105) )  121 7 40 0)
(GOAL N8_F NN N1
(=> (SEMAPHORE $SEM $NUM))
((399 138) )  -38 24 40 0)
(ELSE N8 NN N8_F)
(THEN N8 NN N8_T)
(GOAL N1 NN N2
(=> (SEMAPHORE-TYPE $SEM $TYPE))
()  -1 -7 40 0)
(THEN N0 NN N0_T)
(ELSE N0 NN N0_F)
(IF START NN N0
(? (|| (EQUAL $TYPE SEM-BASIC)
      (EQUAL $TYPE SEM-FIFO)))
()  0 0 40 0)
(GOAL N0_F NN END2
(! (PRINTF
       (FORMAT
           "Unknown semaphore type: %s for %s.\n"
           $TYPE
           $SEM)))
((523 105) )  76 50 40 0)
(THEN N3 NN N3_T)
(ELSE N3 NN N3_F)
(GOAL N3_T NN N4
(? (= @NUM $NUM))
((131 355) )  0 0 40 0)
(THEN N7 NN N7_T)
(ELSE N7 NN N7_F)
(IF N4 NN N7
(? (EQUAL @NUM 0))
()  0 -9 40 0)
(GOAL N7_F NN N5
(=> (SEMAPHORE-POS $SEM @NUM))
()  0 0 40 0)
(GOAL N5 NN N4
(! (= @NUM (- @NUM 1)))
((399 434) )  0 0 40 0)
(GOAL N8_T NN END3
(! (PRINTF
       (FORMAT
           "Semaphore %s already exists with %d tokens.\n"
           $SEM
           $NUM)))
((53 138) )  160 58 40 0)
) )
(|Semaphore FIFO Give| (
(INVOCATION INVOCATION (! (SEM-V $SEM)) 10 50 1 40 0 )
(CONTEXT CONTEXT (SEMAPHORE-TYPE $SEM SEM-FIFO) 0 132 1 60 0 )
(SETTING SETTING  10 250 0 60 0 )
(EFFECTS EFFECTS  10 350 0 60 0 )
(DOCUMENTATION DOCUMENTATION "This OP releases the semaphore $sem.
Note it checks it has it first." 427 458 1 60 0 )
(PROPERTIES PROPERTIES  10 400 0 60 0 )
) (
(START START 0 0 310 3)
(IF N0 0 0 319 121)
(THEN N0_T 0 0 305 121)
(ELSE N0_F 0 0 340 121)
(PROCESS N4 0 0 237 228)
(PROCESS N5 0 0 234 335)
(END END1 0 0 132 543)
(PROCESS N1 0 0 502 288)
(END END2 0 0 492 359)
(PROCESS N2 0 0 234 283)
(PROCESS N6 0 0 233 384)
(PROCESS N23 0 0 134 450)
(PROCESS N9 0 0 320 65)
(PROCESS N10 0 0 500 171)
) (
(GOAL N23 NN END1
(! (END-CRITICAL-SECTION))
()  0 0 40 0)
(GOAL N5 NN N6
(=> (SEMAPHORE-PASSED $SEM (+ 1 $PASSED)))
()  -5 -6 60 0)
(GOAL N1 NN END2
(! (FAILED))
()  0 0 40 0)
(THEN N0 NN N0_T)
(ELSE N0 NN N0_F)
(GOAL N2 NN N5
(=> (SEMAPHORE-POS $SEM (+ $VAL $PASSED 1)))
()  2 -6 60 0)
(GOAL N4 NN N2
(? (SEMAPHORE-PASSED $SEM $PASSED))
()  -19 -4 40 0)
(GOAL START NN N9
(! (START-CRITICAL-SECTION))
()  82 -3 40 0)
(GOAL N0_T NN N4
(? (SEMAPHORE $SEM $VAL))
()  0 0 40 0)
(GOAL N10 NN N1
(! (PRINTF
       (FORMAT
           "No more token to free for %s in intention %s /n"
           $SEM
           (GET-CURRENT-INTENTION))))
()  101 -10 40 0)
(GOAL N0_F NN N10
(! (END-CRITICAL-SECTION))
()  51 0 40 0)
(GOAL N6 NN N23
(~> (SEMAPHORE-ACTIVE $SEM $NUM (GET-CURRENT-INTENTION)))
()  -15 11 60 0)
(IF N9 NN N0
(? (SEMAPHORE-ACTIVE $SEM $NUM (GET-CURRENT-INTENTION)))
()  -7 2 60 0)
) )
(|Semaphore FIFO Take Timeout| (
(INVOCATION INVOCATION (! (SEM-P-TIMEOUT $SEM $TIMEOUT)) 523 58 1 40 0 )
(CONTEXT CONTEXT (SEMAPHORE-TYPE $SEM SEM-FIFO) 524 100 1 60 0 )
(SETTING SETTING  10 250 0 60 0 )
(EFFECTS EFFECTS  10 350 0 60 0 )
(DOCUMENTATION DOCUMENTATION "This OP will get the FIFO semaphore $SEM.
Note it waits at most $TIMEOUT to get it." 526 158 1 60 0 )
(PROPERTIES PROPERTIES  10 400 0 60 0 )
) (
(START START 0 0 309 26)
(PROCESS N2 0 0 320 125)
(PROCESS N4 0 0 320 242)
(PROCESS N7 0 0 320 192)
(PROCESS N8 0 0 320 376)
(PROCESS N1 0 0 320 294)
(PROCESS N27 0 0 508 648)
(PROCESS N3 0 0 320 74)
(IF N0 0 0 320 437)
(THEN N0_T 0 0 306 437)
(ELSE N0_F 0 0 341 437)
(PROCESS N9 0 0 167 474)
(PROCESS N6 0 0 366 781)
(PROCESS N10 0 0 363 711)
(PROCESS N11 0 0 164 527)
(END END3 0 0 358 858)
(IF N13 0 0 164 650)
(THEN N13_T 0 0 150 650)
(ELSE N13_F 0 0 191 650)
(PROCESS N14 0 0 81 728)
(PROCESS N15 0 0 82 797)
(PROCESS N24 0 0 509 438)
(PROCESS N25 0 0 512 558)
(END END28 0 0 502 694)
) (
(GOAL N25 NN N27
(~> (SEMAPHORE-POS $SEM (+ 1 $WAIT)))
()  0 0 40 0)
(GOAL N24 NN N25
(=> (SEMAPHORE-ACTIVE
        $SEM
        (+ 1 $WAIT)
        (GET-CURRENT-INTENTION)))
()  0 0 40 0)
(GOAL N27 NN END28
(! (END-CRITICAL-SECTION))
()  85 -2 40 0)
(GOAL N0_F NN N24
(! (START-CRITICAL-SECTION))
()  45 -14 40 0)
(GOAL N6 NN END3
(! (FAILED))
()  0 0 40 0)
(GOAL N9 NN N11
(? (SEMAPHORE-PASSED $SEM $PASSED))
()  0 0 40 0)
(GOAL N10 NN N6
(! (END-CRITICAL-SECTION))
()  0 0 40 0)
(GOAL N0_T NN N9
(! (START-CRITICAL-SECTION))
((177 446) )  0 4 40 0)
(IF N8 NN N0
(? (ELAPSED-TIME $TIME $TIMEOUT))
()  0 -7 40 0)
(ELSE N0 NN N0_F)
(THEN N0 NN N0_T)
(GOAL N3 NN N2
(! (START-CRITICAL-SECTION))
()  0 0 40 0)
(GOAL START NN N3
(! (= $TIME (CURRENT (TIME))))
()  0 0 40 0)
(GOAL N1 NN N8
(^ (|| (ELAPSED-TIME $TIME $TIMEOUT)
      (SEMAPHORE-POS $SEM (+ 1 $WAIT))))
()  17 -5 60 0)
(GOAL N4 NN N1
(! (END-CRITICAL-SECTION))
()  17 -7 40 0)
(GOAL N7 NN N4
(=> (SEMAPHORE-WAIT $SEM (+ 1 $WAIT)))
()  28 -5 40 0)
(GOAL N2 NN N7
(? (SEMAPHORE-WAIT $SEM $WAIT))
()  9 0 40 0)
(THEN N13 NN N13_T)
(ELSE N13 NN N13_F)
(IF N11 NN N13
(? (SEMAPHORE-POS $SEM (+ 1 $WAIT)))
()  -1 -25 40 0)
(GOAL N13_T NN N14
(~> (SEMAPHORE-POS
        $SEM (+ 1 $WAIT)))
((93 659) )  0 31 30 0)
(GOAL N13_F NN N10
(=> (SEMAPHORE-PASSED
        $SEM (+ $PASSED 1)))
((375 658) )  7 14 40 0)
(GOAL N14 NN N15
(? (SEMAPHORE $SEM $VAL))
()  -15 1 40 0)
(GOAL N15 NN N13_F
(=> (SEMAPHORE-POS
        $SEM (+ $VAL $PASSED 1)))
((197 806) )  39 -73 40 0)
) )
(|Semaphore FIFO Take| (
(INVOCATION INVOCATION (! (SEM-P $SEM)) 10 50 1 40 0 )
(CONTEXT CONTEXT (SEMAPHORE-TYPE $SEM SEM-FIFO) 11 178 1 60 0 )
(SETTING SETTING  10 250 0 60 0 )
(EFFECTS EFFECTS  10 350 0 60 0 )
(DOCUMENTATION DOCUMENTATION "This OP will get the FIFO semaphore $SEM.
Note it waits for ever to get it." 10 240 1 60 0 )
(PROPERTIES PROPERTIES  10 400 0 60 0 )
) (
(START START 0 0 309 21)
(PROCESS N2 0 0 318 81)
(PROCESS N4 0 0 320 195)
(PROCESS N7 0 0 320 140)
(PROCESS N8 0 0 319 313)
(PROCESS N1 0 0 319 252)
(END END1 0 0 309 578)
(PROCESS N19 0 0 315 511)
(PROCESS N20 0 0 317 380)
(PROCESS N25 0 0 313 441)
) (
(GOAL N25 NN N19
(! (END-CRITICAL-SECTION))
()  0 0 40 0)
(GOAL N20 NN N25
(=> (SEMAPHORE-ACTIVE
        $SEM (+ 1 $WAIT) (GET-CURRENT-INTENTION)))
()  0 0 60 0)
(GOAL N8 NN N20
(! (START-CRITICAL-SECTION))
()  -29 -9 40 0)
(GOAL N19 NN END1
(~> (SEMAPHORE-POS $SEM (+ 1 $WAIT)))
()  0 -5 40 0)
(GOAL N2 NN N7
(? (SEMAPHORE-WAIT $SEM $WAIT))
()  9 0 40 0)
(GOAL N7 NN N4
(=> (SEMAPHORE-WAIT $SEM (+ 1 $WAIT)))
()  28 -5 40 0)
(GOAL START NN N2
(! (START-CRITICAL-SECTION))
()  0 -6 40 0)
(GOAL N4 NN N1
(! (END-CRITICAL-SECTION))
()  -7 -6 40 0)
(GOAL N1 NN N8
(^ (SEMAPHORE-POS $SEM (+ 1 $WAIT)))
()  17 -5 40 0)
) )
(|Semaphore Give| (
(INVOCATION INVOCATION (! (SEM-V $SEM)) 10 50 1 40 0 )
(CONTEXT CONTEXT (SEMAPHORE-TYPE $SEM SEM-BASIC) 1 126 1 60 0 )
(SETTING SETTING  10 250 0 60 0 )
(EFFECTS EFFECTS  10 350 0 60 0 )
(DOCUMENTATION DOCUMENTATION "This OP releases the semaphore $sem.
Note it checks it has it first." 463 330 1 60 0 )
(PROPERTIES PROPERTIES  10 400 0 60 0 )
) (
(START START 0 0 307 2)
(IF N0 0 0 318 141)
(THEN N0_T 0 0 304 141)
(ELSE N0_F 0 0 339 141)
(PROCESS N4 0 0 235 188)
(PROCESS N5 0 0 235 256)
(END END1 0 0 229 510)
(PROCESS N1 0 0 502 244)
(END END2 0 0 495 297)
(PROCESS N6 0 0 236 369)
(PROCESS N11 0 0 314 56)
(PROCESS N16 0 0 496 187)
) (
(GOAL N6 NN END1
(! (END-CRITICAL-SECTION))
()  0 0 40 0)
(GOAL N4 NN N5
(=> (SEMAPHORE $SEM (+ $VAL 1)))
()  4 -1 40 0)
(ELSE N0 NN N0_F)
(THEN N0 NN N0_T)
(GOAL N1 NN END2
(! (FAILED))
()  0 0 40 0)
(GOAL N5 NN N6
(~> (SEMAPHORE-ACTIVE
        $SEM
        $NUM
        (GET-CURRENT-INTENTION)))
()  -18 -7 40 0)
(GOAL START NN N11
(! (START-CRITICAL-SECTION))
()  0 0 40 0)
(GOAL N0_T NN N4
(? (SEMAPHORE $SEM $VAL))
()  0 0 40 0)
(GOAL N16 NN N1
(! (PRINTF
       (FORMAT
           "No more token to give for %s in intention %s /n"
           $SEM
           (GET-CURRENT-INTENTION))))
()  134 19 40 0)
(GOAL N0_F NN N16
(! (END-CRITICAL-SECTION))
()  85 -5 40 0)
(IF N11 NN N0
(? (SEMAPHORE-ACTIVE
       $SEM
       $NUM
       (GET-CURRENT-INTENTION)))
()  -57 -7 40 0)
) )
(|Semaphore Reset| (
(INVOCATION INVOCATION (! (SEM-RESET $SEM $NUM)) 10 50 1 40 0 )
(CONTEXT CONTEXT  16 110 0 60 0 )
(SETTING SETTING  10 250 0 60 0 )
(EFFECTS EFFECTS  10 350 0 60 0 )
(DOCUMENTATION DOCUMENTATION "Reset a semaphore called $SME 
 and intialize it with $NUM." 15 547 1 60 0 )
(PROPERTIES PROPERTIES  10 400 0 60 0 )
) (
(START START 0 0 376 22)
(IF N3 0 0 267 324)
(THEN N3_T 0 0 253 324)
(ELSE N3_F 0 0 288 324)
(PROCESS N4 0 0 120 347)
(PROCESS N5 0 0 389 417)
(IF N7 0 0 119 421)
(THEN N7_T 0 0 105 421)
(ELSE N7_F 0 0 140 421)
(END END1 0 0 484 505)
(PROCESS N9 0 0 120 279)
(IF N0 0 0 387 112)
(THEN N0_T 0 0 373 112)
(ELSE N0_F 0 0 408 112)
(END END2 0 0 581 178)
(PROCESS N17 0 0 268 174)
(PROCESS N1 0 0 388 173)
(PROCESS N2 0 0 389 269)
) (
(GOAL N7_T NN END1
(=> (SEMAPHORE-PASSED $SEM 0))
((113 513) )  57 -16 40 0)
(GOAL N1 NN N2
(=> (SEMAPHORE-WAIT $SEM 0))
()  0 0 40 0)
(IF N2 NN N3
(? (EQUAL $TYPE SEM-FIFO))
()  0 0 40 0)
(GOAL N17 NN N1
(~> (SEMAPHORE-ACTIVE $SEM $X $Y))
()  84 -22 40 0)
(GOAL N0_T NN N17
(=> (SEMAPHORE $SEM $NUM))
((280 120) )  -50 7 40 0)
(GOAL N5 NN N4
(! (= @NUM (- @NUM 1)))
((399 355) )  0 0 40 0)
(GOAL N7_F NN N5
(=> (SEMAPHORE-POS $SEM @NUM))
()  0 0 40 0)
(IF N4 NN N7
(? (EQUAL @NUM 0))
()  0 -9 40 0)
(ELSE N7 NN N7_F)
(THEN N7 NN N7_T)
(ELSE N3 NN N3_F)
(THEN N3 NN N3_T)
(GOAL N9 NN N4
(? (= @NUM $NUM))
()  4 -11 40 0)
(GOAL N3_T NN N9
(~> (SEMAPHORE-POS $SEM $IGNORE))
((182 263) )  20 0 40 0)
(THEN N0 NN N0_T)
(ELSE N0 NN N0_F)
(IF START NN N0
(? (SEMAPHORE-TYPE $SEM $TYPE))
()  0 0 40 0)
(GOAL N0_F NN END2
(! (PRINTF
       (FORMAT
           "Unknown semaphore %s.\n"
           $SEM)))
((598 121) )  -1 10 40 0)
) )
(|Semaphore Take Timeout| (
(INVOCATION INVOCATION (! (SEM-P-TIMEOUT $SEM $TIMEOUT)) 10 50 1 40 0 )
(CONTEXT CONTEXT (SEMAPHORE-TYPE $SEM SEM-BASIC) 10 150 1 60 0 )
(SETTING SETTING  10 250 0 60 0 )
(EFFECTS EFFECTS  10 350 0 60 0 )
(DOCUMENTATION DOCUMENTATION "This OP will get the semaphore $SEM.
It waits at most $TIMEOUT to get it." 10 271 1 60 0 )
(PROPERTIES PROPERTIES  10 400 0 60 0 )
) (
(START START 0 0 309 21)
(PROCESS N1 0 0 319 167)
(PROCESS N2 0 0 399 294)
(PROCESS N3 0 0 399 369)
(IF N0 0 0 399 444)
(THEN N0_T 0 0 385 444)
(ELSE N0_F 0 0 420 444)
(PROCESS N5 0 0 109 551)
(END END1 0 0 430 633)
(PROCESS N6 0 0 111 411)
(PROCESS N7 0 0 320 83)
(IF N9 0 0 320 228)
(THEN N9_T 0 0 306 228)
(ELSE N9_F 0 0 341 228)
(END END2 0 0 120 228)
(PROCESS N18 0 0 107 632)
(PROCESS N17 0 0 110 486)
) (
(GOAL N18 NN END1
(! (END-CRITICAL-SECTION))
()  7 18 40 0)
(IF N3 NN N0
(? (> @VAL 0))
()  -32 0 40 0)
(ELSE N0 NN N0_F)
(THEN N0 NN N0_T)
(GOAL N2 NN N3
(? (SEMAPHORE $SEM @VAL))
()  0 0 40 0)
(GOAL N7 NN N1
(^ (|| (ELAPSED-TIME $TIME $TIMEOUT)
      (& (SEMAPHORE $SEM @VAL)
         (> @VAL 0))))
()  0 -7 40 0)
(GOAL START NN N7
(! (= $TIME (CURRENT (TIME))))
()  0 -7 40 0)
(THEN N9 NN N9_T)
(ELSE N9 NN N9_F)
(IF N1 NN N9
(? (ELAPSED-TIME $TIME $TIMEOUT))
()  0 0 40 0)
(GOAL N9_T NN END2
(! (FAILED))
()  0 0 40 0)
(GOAL N9_F NN N2
(! (START-CRITICAL-SECTION))
((408 236) )  3 34 40 0)
(GOAL N0_F NN N7
(! (END-CRITICAL-SECTION))
((509 452) (509 92) )  9 -105 40 0)
(GOAL N0_T NN N6
(=> (SEMAPHORE $SEM (- @VAL 1)))
((262 453) (262 354) (120 354) )  -22 42 40 0)
(GOAL N17 NN N5
(=> (SEMAPHORE-ACTIVE $SEM $NUM (GET-CURRENT-INTENTION)))
()  71 -8 60 0)
(GOAL N6 NN N17
(? (SEMAPHORE-WAIT $SEM $NUM))
()  24 -6 40 0)
(GOAL N5 NN N18
(=> (SEMAPHORE-WAIT $SEM (+ $NUM 1)))
()  13 -2 40 0)
) )
(|Semaphore Take| (
(INVOCATION INVOCATION (! (SEM-P $SEM)) 10 50 1 40 0 )
(CONTEXT CONTEXT (SEMAPHORE-TYPE $SEM SEM-BASIC) 10 150 1 60 0 )
(SETTING SETTING  10 250 0 60 0 )
(EFFECTS EFFECTS  10 350 0 60 0 )
(DOCUMENTATION DOCUMENTATION "This OP will get the semaphore $SEM.
Note it waits for ever to get it." 10 255 1 60 0 )
(PROPERTIES PROPERTIES  10 400 0 60 0 )
) (
(START START 0 0 309 21)
(PROCESS N1 0 0 320 118)
(PROCESS N2 0 0 320 194)
(PROCESS N3 0 0 318 275)
(IF N0 0 0 319 344)
(THEN N0_T 0 0 305 344)
(ELSE N0_F 0 0 340 344)
(PROCESS N5 0 0 234 661)
(END END1 0 0 226 738)
(PROCESS N6 0 0 231 402)
(PROCESS N21 0 0 230 451)
(PROCESS N22 0 0 230 562)
) (
(GOAL START NN N1
(^ (& (SEMAPHORE $SEM @VAL)
      (> @VAL 0)))
()  6 -6 40 0)
(GOAL N1 NN N2
(! (START-CRITICAL-SECTION))
()  9 -6 40 0)
(GOAL N2 NN N3
(? (SEMAPHORE $SEM @VAL))
()  0 0 40 0)
(THEN N0 NN N0_T)
(ELSE N0 NN N0_F)
(IF N3 NN N0
(? (> @VAL 0))
()  -32 0 40 0)
(GOAL N5 NN END1
(! (END-CRITICAL-SECTION))
()  -25 -10 40 0)
(GOAL N0_F NN START
(! (END-CRITICAL-SECTION))
((515 353) (516 29) )  0 0 40 0)
(GOAL N0_T NN N6
(=> (SEMAPHORE $SEM (- @VAL 1)))
((242 353) )  1 32 40 0)
(GOAL N6 NN N21
(? (SEMAPHORE-WAIT $SEM $NUM))
()  0 0 40 0)
(GOAL N22 NN N5
(=> (SEMAPHORE-WAIT $SEM (+ $NUM 1)))
()  0 -7 40 0)
(GOAL N21 NN N22
(=> (SEMAPHORE-ACTIVE
        $SEM
        $NUM
        (GET-CURRENT-INTENTION)))
()  0 0 40 0)
) )
)
